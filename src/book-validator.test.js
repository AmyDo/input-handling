const v = require("./book-validator");

// Make sure that our normal test works so our environment is all set up.
test('SANITY CHECK: 1 + 2 = 3', () => {
  expect(v.sum(1, 2)).toBe(3);
});

/**
 * @jest-environment jsdom
 *
 * ^^^^^^^^^^^^^^^^^^^^^^^-magic comment for Jest's DOM tools. This MUST be at the top.
 *
 * Jest Unit Tests for the book-validator set of functions
 */
describe('testing isTitle', () => {
  test('single letter',     () => { expect(v.isTitle('A')).toBe(true) });
  test('simple title',      () => { expect(v.isTitle('War and Peace')).toBe(true) });
  test('Block list',        () => { expect(v.isTitle("Boaty McBoatface")).toBe(false) });
  test('Block, mixed case', () => { expect(v.isTitle("bOaTy McBoAtFaCe")).toBe(false) });
  test('Anchor drop!',      () => { expect(v.isTitle("okЁЯТй")).toBe(false) });
  test('Leading spaces',    () => { expect(v.isTitle('   a')).toBe(false) });
  test('Trailing spaces',   () => { expect(v.isTitle('a   ')).toBe(false) });
  test('evil tab',          () => { expect(v.isTitle("a\tb")).toBe(false) });
  test('evil newline',      () => { expect(v.isTitle("a\nb")).toBe(false) });
  test('evil Win newline',  () => { expect(v.isTitle("a\r\nb")).toBe(false) });
  test('evil form feed',    () => { expect(v.isTitle("a\fb")).toBe(false) });
  test('evil vtab',         () => { expect(v.isTitle("a\vb")).toBe(false) });
  test('german allowed',    () => { expect(v.isTitle("Ich wei├Я nichts")).toBe(true) });
  test('├▒ composed',        () => { expect(v.isTitle("ma\u00F1ana")).toBe(true) });
  test('├▒ decomposed',      () => { expect(v.isTitle("ma\u006E\u0303ana")).toBe(true) });
  test('arabic allowed',     () => { expect(v.isTitle("┘Е╪▒╪н╪и╪з ╪и╪з┘Д╪╣╪з┘Д┘Е")).toBe(true) });
});

describe('isSameTitle', () => {

  test('simple same',         () => { expect(v.isSameTitle('a', 'a')).toBe(true) });
  test('different object',    () => { expect(v.isSameTitle(new String('a'), new String('a'))).toBe(true) });
  test('not strings',         () => { expect(v.isSameTitle(1, null)).toBe(false) });
  test('leading trailing ws', () => { expect(v.isSameTitle(' a ', 'a')).toBe(true) });
  test('leading trailing ws', () => { expect(v.isSameTitle(" a \t", "a")).toBe(true) });

  test('hindi',               () => { expect(v.isSameTitle("рдирдорд╕реНрддреЗ рджреБрдирд┐рдпрд╛!", "рдирдорд╕реНрддреЗ рджреБрдирд┐рдпрд╛!")).toBe(true) });
  test('hindi different',     () => { expect(v.isSameTitle("рдирдорд╕реНрддреЗ рджреБрдирд┐рдпрд╛!", "рдЕрд▓рд╡рд┐рджрд╛")).toBe(false) });

  test('multiple diacritics', () => { expect(v.isSameTitle("a\u0321\u031a", "a\u031a\u0321")).toBe(true) });

  test('ma├▒ana NFD vs NFC',   () => { expect(v.isSameTitle("ma\u00F1na", "ma\u006E\u0303na")).toBe(true) });

  test('├▒ and n compat',      () => { expect(v.isSameTitle("ma\u00F1ana", "manana")).toBe(true) });
  test('├▒ and n compat',      () => { expect(v.isSameTitle("ma\u006E\u0303ana", "manana")).toBe(true) });

  test('ligature ff and ямА',   () => { expect(v.isSameTitle("ff", "\uFB00")).toBe(true) });
  test('ligature ae and ├ж',   () => { expect(v.isSameTitle("ae", "\u00E6")).toBe(true) });
  test('german с║Ю and ss',     () => { expect(v.isSameTitle("с║Ю", "\u1E9E")).toBe(true) });

  test('bidi compat',   () => { expect(v.isSameTitle("abc\u202Edef", "abcdef")).toBe(true) });




  test('zalgo',   () => { expect(v.isSameTitle("zalgo", "z╠╕╠А═Г╠Ф═Д═С═А╠Д╠┐╠О╠Й╠Б╠П═С═А╠Д═Ы╠┐╠╛═Д═К═Р╠Ъ═Р═Ч╠╛╠Н╠Б╠Д╠Ъ╠Е═Б╠Т═Д╠Ж╠А╠╛╠М═М═Б═Э═а═Д╠Б╠Д╠А═Т╠Ы═С╠Б╠╛╠Г═К╠Г═Ы╠Н╠У╠Т╠╛╠Ы═Э═Ж╠П╠Ъ═Э═Д╠╛═В╠М╠К═Ж╠К═Ш╠З╠Ж═Ч═Ы═Ш╠У═С═Р═М═Д═а╠М═а╠У═Э╠У╠З╠У╠Е═Э═М╠Г═Э╠Д╠А═Р╠Г═Г═Р╠Й╠Р═Э═К═Ж╠У╠И═Ч╠И╠О╠╜╠Й═М═Б═а╠┐═Б╠Х═Ч╠Г═Д═Т╠Г═Ы╠┐═Ш╠Ж╠Е═Э╠Е═Р═Ж╠Б╠Ж═А═Б╠О╠Х═а╠Б═Р╠╜═Э╠Р═Д╠А═Э═А═Ы╠╜═Л═Э╠И╠П═Ч╠О═Ш╠Ы═Э╠С╠Ы═С═Д═С╠╛═а═Т╠А╠Ш═О╠л╠е═Щ╠в╠Щ╠л═И╠п╠▒═Н╠к═З╠╗╠е╠б╠Я╠е╠о╠Ю═И╠Я╠о╠╝╠Щ╠о╠и═И╠л═Н╠а╠Я╠Ц╠▒╠м╠Э╠й╠▓╠к═Ф╠Э╠к╠е═Х╠м╠║╠а╠в╠Э╠Ц╠е═И╠▓╠▒╠к╠г═Ъ╠л╠й╠в╠Ю╠╝╠а═Ф╠▓═Й═Й╠│═Й╠░═О╠Ц╠а═Х╠й╠Я═Й╠и╠▓╠г╠е╠м═Ц═Ъ╠л╠▓╠г╠Я╠▒╠Ь╠░═Й╠е═О╠▒╠░═Й╠л═Й╠│╠п═Ц═У╠г═Ц╠Ц╠д═Щ╠Щ╠╣╠з═Н╠к╠и╠м╠▒╠н╠д╠й╠а╠Э═Ц╠Ю═Щ╠│╠а╠Ч╠│╠и═И═Ъ╠н═Ц╠й╠п╠к╠╝═Щ╠з╠о═З╠Я╠Ш╠╣═Ь╠Ч╠Ь╠з═У═Ф╠м╠л═Х╠Ц═Щ╠Ц╠й╠╣╠║═О╠о╠з═Щ╠Ч═З╠ж═Х╠Ю╠Ю╠к╠й╠в╠Щ═Ь╠б╠Ю╠в╠е═З═У╠в╠╝╠╣╠н╠Я═Ь╠н╠╗╠з═Ь╠м═И═Н╠е═Ъ╠Ц╠п╠и╠Я═Ф╠╣╠о═Ь╠л╠│╠и╠и╠Ш╠к╠Ч╠▒═Ь╠г╠Я╠Ц═Ь╠п═Й╠Ю╠▒╠Ч╠д╠в╠Я═У═У╠е╠з╠е═И═И╠п╠Ц╠б═Х╠Э═Ф╠в═Ъ╠║═Й╠Ю╠л╠░╠е╠о═Ф╠г╠Э╠Ю╠м═Ф╠╝╠Ю╠п═З╠Ц╠к╠Ш═Х╠к╠аa╠╡╠Г╠Г╠П╠Ы═В╠Г═М═С╠Ж╠Е╠О╠Г╠Х╠Х╠Т╠Ъ╠И═Г═В╠Г╠К═Э╠Ы═С═Ж╠П╠Й╠Л╠Ф═К╠Ы═Э═Л═Ы╠О╠В═Б╠О═В╠Т╠Л╠В╠Г═Ы═Г═Э═Д╠Ж╠╛╠У═Д╠Х╠╛╠О═Б╠Д═а╠┐═Э═Д═М═Д╠У═Ш╠Н═Д╠М═Ш╠Н═Ч╠В╠А╠П═Б╠Н═Э╠Р╠Й╠П╠К╠Ж═С═Э╠К═Э╠Д╠Е╠Б═Ж╠Х═Д═К═Э═Д═Ы═Э═Ж╠Б╠╜═Э╠Е╠Ъ═Д╠И╠В╠М╠Н╠Ф╠Ф╠М╠Л╠С═Д═Э╠У╠Б═а╠Л╠С═Б╠Б╠П═Д╠╛═а╠С╠╜═а╠Ф╠Ф═Б═Д╠Н═Ы═Э╠Ы╠┐╠Ж╠М╠Л╠Г╠М╠В═М═Э╠А╠П═Т═а╠У═Д╠Й╠О═Б╠Т═Б╠А╠А╠Ф╠Б═Э╠Й╠Л╠А╠Ы═А╠╜═Д╠┐╠У═А╠Т═В╠╛╠Р╠З═Г═Д═Ж═Ж═А═Ж╠Е═Т╠М╠В═Б═В╠У╠Н╠П═Р═Э╠Г╠Т╠А╠В╠┐═Ч╠Н═Д═Э═М╠З╠Х╠З╠С╠З═Л╠┐╠Ф╠С═В╠Е╠У═А═Э╠Ъ╠К╠К═Р╠Ы╠╜╠Б╠Б═Г╠А╠Р╠Й═а═Ч═Э╠А═Ч╠Ф╠А╠Н╠Й╠Й═С╠Л╠О╠Г═а═Л╠П╠Й═Б╠Д═Ч═С╠С╠Ъ╠Й═Л╠╜═Т═В╠И═С═Э═Б╠О╠Д╠Н╠╛═Д═Т═В╠Ф╠Э╠Ю╠з═Ь╠Я═Х╠о╠▒╠в╠╝═Х═Ц═Ъ╠н═У═Ь╠▓╠╣═З╠╝╠ж╠Я╠а╠н╠Ц╠д═Щ═Й═З╠г╠и╠з╠в╠о═У═Ф═Ц═Ь═Х╠Щ╠д╠Ч═З╠й═Ь╠и═И╠Щ═И═О╠н╠г╠╝═З╠Щ╠╝╠м═У═Ц╠Ч═Щ╠и╠к╠Я╠к═Ъ╠и╠Щ╠Ч╠Ь═Ь═О═Щ╠Ю╠Ш═Ц═Е╠Ч╠ж═Щ═О╠╗╠Ц═Й═Ф╠и╠г╠й╠╣╠Я═И═Щ═О╠▓═Ъ═Й═Хl╠┤═Р═Т╠Ж╠Й╠П╠У╠Л╠П═А═Б═С╠Б╠М╠Б═С╠Х═В╠О╠Г╠И═Ы═Р╠Б╠А╠В═Т╠Р╠Н═А═Д╠Т╠У╠К═Т═Д═Д╠К╠Н═К╠┐╠╛═Э═Ш╠К╠╛╠О╠Л╠У╠З╠Х╠Ъ╠Ъ╠Ъ╠Г═Р═Ж╠Ф═С╠У═Ч╠Х╠П╠Ъ═Д╠Ж═М═Ш═В═Э╠Х╠К═Ш╠С═Ч═А╠Ф╠Н╠Й═Ч╠О╠К═Ч═Д═Ш╠╜╠Х╠Й═Ж╠Т═Г╠Ы╠╛╠И╠╜╠С═Э═Б╠В╠Т╠М╠А═Ш═Д═Ч╠П╠О╠Л╠Н╠Р╠У╠И═Ч╠Ж╠Ж╠Б╠Г═Р╠Е═К╠И═Л═Р═К═А╠Г═С═С╠Х╠Б═а╠Ъ╠И╠Р╠Д═Ч╠И╠У╠┐╠З╠Й═Д╠П═А╠М╠У═Б╠И═Р╠Е═Р╠Г╠╜═К╠Н═Ш╠И═а═Ш╠Й╠Ж╠И═Л═Р╠Р╠А═Д╠Й╠Г═а╠Ф═Ж═Б═Ж╠Б═Э╠Ъ╠О╠А╠Ы═К╠М╠Д╠О╠У═Л═Д═Р╠Д╠╜╠Ю╠║╠Ю╠Ш╠г═Н═Х═Х╠Ч╠Ю╠Ю═Е╠╝╠о╠╗╠░═Ф╠║╠в╠Ш═Й═Ц═Ъ╠л╠Ю╠п═И═Й╠з╠г╠▓╠Ш╠б═О╠╝╠▒═Е╠║╠Ю╠о╠Ш╠╣═Щ╠м╠к═У╠и╠Э╠н═Ц╠│╠▒═Ц═Е═И═Ъ╠п╠в═Ф╠╣╠й╠│╠й╠и═Н╠з╠г╠╣╠и═Ф╠╣╠║╠н╠Ц╠Ь═Щ╠╗╠░╠║╠и╠Э╠ж╠Я╠п╠к╠Ю═Й╠Э╠й╠й╠о╠Ь╠л╠╝╠Ч═Щ═Ц═Ъ╠▓═И═Щ╠б╠▒╠░═Ь╠е╠а═О╠м╠о═У╠м═Ф╠к═Х╠п═Н═Щ╠╝═Щ═О╠г╠Ц╠е╠к═З═Н╠и═Х═О╠е╠л╠Щ═Ф╠Ц╠о╠м═Ф╠з╠Я═И╠п═Щ╠║╠а═Ф╠ж╠▒╠й╠▒╠Э═Ц╠║═Е╠│╠Ь╠к╠│═Ь═У╠о═Ф═Й╠░╠╗╠м╠Ц═Ъ╠б═Х╠к╠╝╠Щ═З═Ь╠╝╠и╠м═Ъ╠│═О╠в╠║╠╝╠и╠а╠Ь╠й╠Я╠й═Ь╠Ш╠│╠▒╠Э╠л╠з╠▓╠Ц╠Щ═Й═Х═З╠Э═Ъ╠║╠л╠Ь╠Ь╠г═Е╠│╠и╠║═З═Н╠м╠Щ╠╝╠Ч═Е╠▓═Х╠Ь╠Ш═Ъ╠б╠д╠е╠║═Оg╠╢═Р═Э═Ж═Ч╠Н═Г═Д═К╠Л╠И═Б═К═Т═Ы═Д═Г╠З═Р═Ж╠Д╠А╠С═Ш═Т═Ш╠В═а╠У═а╠Г═а╠┐╠Б═Т═Ш═Д╠Ы╠Л═Ш═а═Р═Д═Э╠Д╠Т╠Х═М═а═Р╠┐╠О═Э═Л╠М═Ж╠Ы═Ы═Т╠Ж═Ы╠Ф╠В╠И╠И╠Б╠Н═Ш╠┐╠С╠Х╠Г╠╜═К╠Б╠Ъ╠В═Ж═М═С╠И╠Ы═Э═Б╠З╠Б╠Й═Э╠Д╠Й╠░╠в═Ф╠й╠а╠▓╠м╠б╠Ч═Й╠е═У═Ь═Ъ╠Я╠б╠о╠г╠а╠в╠Ю╠к╠Ю╠з╠Ч╠з╠Ш╠е╠Щ╠е═Ц╠з═Х╠Ш╠м╠Ц╠й╠Ш╠░╠д╠л╠Ч╠▓╠м╠Ш╠а╠а═У╠Ш╠Ц═Е╠и╠п═Й╠ж╠Э╠г╠║═О╠е╠Я╠╗╠║╠▒╠Э═Щ═Н╠Щ╠и═Ъ═У╠б╠ж╠в╠ж╠й╠к╠е╠Ь═О╠ж╠Ш╠Э╠з╠Ц═Ф═Ф╠Щ╠а╠Ц╠о╠к╠╝═Ф═И═Е═Ц═О═О╠│═И═О╠Ч╠╣╠к╠л═Х╠ж╠й╠м╠д═Щ╠Щ═З╠б═Щ═Ь╠▒╠л╠н═Ц╠д═Е═Ъ╠а╠Ц╠о╠и╠н╠Ю═Ц╠л╠и╠п╠в═Ц╠░╠о╠Я═О╠з╠Я╠а═Й╠Щ╠Ю╠г╠Я╠║╠▓═О╠╣╠▓═Й╠Ь╠Э═Ц╠и═О╠в╠╗╠Ю╠и╠г╠о═Ъ═У╠з═Н╠▓═У╠г╠Ч╠▒═Й╠Ч═У╠м╠з═О╠╣═И╠г╠Э═Щ╠и╠Э╠Щ╠о╠ж═У╠н╠п═У╠ж╠╗═З╠д╠в╠г╠е╠Ш╠а═И═И═Х╠м╠Ш═Х═Щ╠Щ╠╝═Ь╠г╠╣╠о╠Ю═Ъ╠ж╠м╠б╠в╠Я═Ц═У╠Ю╠│═Ъ╠Ч╠а╠й╠░═Н╠д╠й╠Щ╠Ю╠в═Й╠и╠╝╠п╠╣╠л╠дo╠╕╠Х╠П╠Д═Л╠Е╠В╠Х╠Ф═Р═Д═Ш╠╛╠П╠┐╠И╠С╠К╠Ы╠Т╠╜╠Ф═Ф╠ж╠н╠Ш╠▒╠з═Е╠│╠│╠╣╠а╠в╠▓╠ж═Н═О╠ж═Ъ╠а═Н╠е╠з═Ь═Ъ═З╠б╠а╠м╠и╠Ч╠│╠Щ╠к═Е╠и╠ж╠Ю╠м╠о╠Ц╠в═Ъ╠н═Х═З═Ъ═Щ╠б═Й╠й═Щ╠и╠│═Ц═Ф═Й╠▒╠о╠▒╠д╠в═И╠л╠л═Ф╠▓═И╠е╠в╠░═Ь╠▓╠н═Х╠╝═Х╠м╠о╠Ь═И╠│═И═Х╠╗╠ж╠Щ═Ф═Х╠в╠▒╠░═Ь╠е╠Ц╠й╠о═Й═Й╠Ч╠о╠й═З═Е╠▒═Ф╠Ш╠з╠й╠а")).toBe(true) });



});